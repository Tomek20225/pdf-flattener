name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    uses: ./.github/workflows/tests.yml

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install poppler

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile flatten_pdf.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-flattener-${{ matrix.os }}
          path: dist/flatten_pdf${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Debug file structure
        run: |
          pwd
          echo "Current directory contents:"
          ls -la
          echo "Ubuntu artifact contents:"
          ls -la pdf-flattener-ubuntu-latest/
          echo "macOS artifact contents:"
          ls -la pdf-flattener-macos-latest/
          echo "Windows artifact contents:"
          ls -la pdf-flattener-windows-latest/

      - name: Make Unix executables executable
        run: |
          chmod +x pdf-flattener-ubuntu-latest/flatten_pdf
          chmod +x pdf-flattener-macos-latest/flatten_pdf

      - name: Verify files and prepare for release
        run: |
          # Verify files exist
          test -f pdf-flattener-ubuntu-latest/flatten_pdf || (echo "Ubuntu binary missing" && exit 1)
          test -f pdf-flattener-macos-latest/flatten_pdf || (echo "macOS binary missing" && exit 1)
          test -f pdf-flattener-windows-latest/flatten_pdf.exe || (echo "Windows binary missing" && exit 1)

          # Copy files to a flat directory with distinct names
          mkdir release-files
          cp pdf-flattener-ubuntu-latest/flatten_pdf release-files/flatten_pdf-linux
          cp pdf-flattener-macos-latest/flatten_pdf release-files/flatten_pdf-macos
          cp pdf-flattener-windows-latest/flatten_pdf.exe release-files/flatten_pdf.exe

          # Make sure they're executable
          chmod +x release-files/flatten_pdf-linux
          chmod +x release-files/flatten_pdf-macos

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-files/flatten_pdf-linux
            release-files/flatten_pdf-macos
            release-files/flatten_pdf.exe
          generate_release_notes: true
